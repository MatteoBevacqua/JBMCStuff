<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="cyclehead" attr.type="boolean" for="node" id="cyclehead">
    <default>false</default>
  </key>
  <key attr.name="threadId" attr.type="int" for="edge" id="threadId">
    <default>0</default>
  </key>
  <key attr.name="createThread" attr.type="int" for="edge" id="createThread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="creationtime" attr.type="string" for="graph" id="creationtime"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <node id="sink">
      <data key="invariant">anonlocal::2a = (void *)&amp;dynamic_object13;</data>
      <data key="invariant.scope">java::OOPFeatures.LegalCasting.main:([Ljava/lang/String;)V</data>
    </node>
    <node id="226.18">
      <data key="entry">true</data>
    </node>
    <edge source="226.18" target="227.31">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="226.20"/>
    <node id="226.22"/>
    <node id="226.24"/>
    <node id="226.26"/>
    <node id="226.28"/>
    <node id="227.31">
      <data key="invariant">dynamic_object1 = nondet_symbol(symex::nondet1);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="227.31" target="230.45">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="227.33"/>
    <node id="227.35"/>
    <node id="227.37"/>
    <node id="227.39"/>
    <node id="230.45">
      <data key="invariant">dynamic_object1 = nondet_symbol(symex::nondet1);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="230.45" target="233.49">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="233.49">
      <data key="invariant">dynamic_object1.length = nondet_array_length;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="233.49" target="234.50">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="234.50">
      <data key="invariant">dynamic_object1.data = (void **)dynamic_2_array;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="234.50" target="246.83">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="234.52"/>
    <node id="234.54"/>
    <node id="234.56"/>
    <node id="234.58"/>
    <node id="234.60"/>
    <node id="246.83">
      <data key="invariant">dynamic_2_array = ARRAY_OF(null);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="246.83" target="259.339">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="246.118"/>
    <node id="246.153"/>
    <node id="246.188"/>
    <node id="246.223"/>
    <node id="259.339">
      <data key="invariant">dynamic_object4 = nondet_symbol(symex::nondet5);</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="259.339" target="8.342">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="8.342">
      <data key="invariant">arg0a = &amp;dynamic_object1;</data>
      <data key="invariant.scope">__CPROVER__start</data>
    </node>
    <edge source="8.342" target="9.347">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="8.344"/>
    <node id="9.347">
      <data key="invariant">dynamic_object13 = nondet_symbol(symex::nondet22);</data>
      <data key="invariant.scope">java::OOPFeatures.LegalCasting.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="9.347" target="12.350">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="12.350">
      <data key="invariant">dynamic_object13.@OOPFeatures.A.@java.lang.Object.@class_identifier = "java::OOPFeatures.B";</data>
      <data key="invariant.scope">java::OOPFeatures.LegalCasting.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="12.350" target="4.353">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="4.353">
      <data key="invariant">this = &amp;dynamic_object13;</data>
      <data key="invariant.scope">java::OOPFeatures.LegalCasting.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="4.353" target="26.356">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">8</data>
    </edge>
    <node id="26.356">
      <data key="invariant">this = (struct OOPFeatures.A *)&amp;dynamic_object13;</data>
      <data key="invariant.scope">java::OOPFeatures.B.&lt;init&gt;:()V</data>
    </node>
    <edge source="26.356" target="13.361">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">4</data>
    </edge>
    <node id="13.361">
      <data key="invariant">this = (struct java.lang.Object *)&amp;dynamic_object13;</data>
      <data key="invariant.scope">java::OOPFeatures.A.&lt;init&gt;:()V</data>
    </node>
    <edge source="13.361" target="16.363">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">13</data>
    </edge>
    <node id="16.363">
      <data key="invariant">anonlocal::1a = (void *)&amp;dynamic_object13;</data>
      <data key="invariant.scope">java::OOPFeatures.LegalCasting.main:([Ljava/lang/String;)V</data>
    </node>
    <edge source="16.363" target="sink">
      <data key="originfile">OOPFeatures/LegalCasting.java</data>
      <data key="startline">15</data>
    </edge>
  </graph>
</graphml>
